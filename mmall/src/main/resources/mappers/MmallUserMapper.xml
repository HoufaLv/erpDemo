<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mmall.dao.MmallUserMapper">
    <resultMap id="BaseResultMap" type="com.mmall.pojo.MmallUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="question" jdbcType="VARCHAR" property="question"/>
        <result column="answer" jdbcType="VARCHAR" property="answer"/>
        <result column="role" jdbcType="INTEGER" property="role"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, `password`, email, phone, question, answer, `role`, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mmall_user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <!--检查用户是否存在-->
    <select id="checkUserName" resultType="java.lang.Integer">
        select count(1)
        from mmall_user
        where username = #{username}
    </select>
    <!--登陆-->
    <select id="login" resultType="com.mmall.pojo.MmallUser">
        select
        <include refid="Base_Column_List"/>
        from mmall_user where username=#{username} and password = #{md5Password};
    </select>
    <!--检查账户是否有效-->
    <select id="validateUser" resultType="java.lang.Integer" parameterType="map">
        select count(1)
        from mmall_user
        where
        <foreach collection="paramMap.keys" item="key" open="(" close=")" separator=",">
            ${key}
        </foreach>
        =
        <foreach collection="paramMap.keys" item="key" open="(" close=")" separator=",">
            #{paramMap[${key}]}
        </foreach>
    </select>

    <!--获得用户忘记密码问题-->
    <select id="getForgetQuestion" resultType="java.lang.String">
        select question
        from mmall_user
        where username = #{username}
    </select>
    <!--反向查询，查询phone存在并且不是这个用户的，有的话就说明这个email 在别的用户中已经使用了-->
    <select id="checkEmailByUserId" resultType="java.lang.Integer">
      select count(1) from mmall_user where email = #{email} and id != #{id}
    </select>
    <!--反向查询，查询phone存在并且不是这个用户的，有的话就说明这个email 在别的用户中已经使用了-->
    <select id="checkPhoneByUserId" resultType="java.lang.Integer">
      select count(1) from mmall_user where phone = #{phone} and id != #{id}
    </select>
    <!--用户更新的信息email 和 phone 是否和原来一样-->
    <select id="checkOriginEmailPhone" resultType="java.lang.Integer">
        select count(1) from  mmall_user where (email = #{email} or phone = #{phone}) and id = #{id}
    </select>

    <!--<select id="getCurrentUserByIdPasswordOld" resultType="com.mmall.pojo.MmallUser">-->
        <!--select <include refid="Base_Column_List"/>-->
        <!--from mmall_user whe-->
    <!--</select>-->

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from mmall_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.mmall.pojo.MmallUser" useGeneratedKeys="true" keyProperty="id">
        insert into mmall_user (id, username, `password`,
                                email, phone, question,
                                answer, `role`, create_time,
                                update_time)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},
                #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.mmall.pojo.MmallUser">
        insert into mmall_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="question != null">
                question,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="role != null">
                `role`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null">
                #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <!--用户注册-->
    <insert id="register" parameterType="com.mmall.pojo.MmallUser" useGeneratedKeys="true" keyProperty="id">
        insert into mmall_user (username, password, email, phone, question, answer, role, create_time, update_time)
        VALUES (#{username}, #{password}, #{email}, #{phone}, #{question}, #{answer}, #{role}, #{createTime},
                #{updateTime})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.mmall.pojo.MmallUser">
        update mmall_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null">
                question = #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                `role` = #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mmall.pojo.MmallUser">
        update mmall_user
        set username    = #{username,jdbcType=VARCHAR},
            `password`  = #{password,jdbcType=VARCHAR},
            email       = #{email,jdbcType=VARCHAR},
            phone       = #{phone,jdbcType=VARCHAR},
            question    = #{question,jdbcType=VARCHAR},
            answer      = #{answer,jdbcType=VARCHAR},
            `role`      = #{role,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--忘记密码重置密码-->
    <update id="forgetResetPassword">
        update mmall_user
        set password = #{passwordNew}
        where username = #{username};
    </update>
    <!--登录状态重置密码-->
    <update id="resetPassword">
        update mmall_user
        set  password = #{passwordNew}
        where
        id = #{id}
    </update>

</mapper>