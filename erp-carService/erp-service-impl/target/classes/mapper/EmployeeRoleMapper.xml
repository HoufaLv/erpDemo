<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksit.erp.mapper.EmployeeRoleMapper">
  <resultMap id="BaseResultMap" type="com.ksit.erp.entity.EmployeeRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, employee_id, role_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee_role
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="validate" resultType="java.lang.Integer" parameterType="map">
      select count(1) from employee_role where
        <foreach collection="paramMap.keys" item="key" open="(" close=")" separator=",">
          ${key}
        </foreach>
        =
        <foreach collection="paramMap.keys" item="key" open="(" close=")" separator=",">
          #{paramMap[${key}]}
        </foreach>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByRoleId">
        delete  from employee_role where role_id = #{id}
    </delete>
    <delete id="deleteByEmployeeId">
      delete  from employee_role where employee_id = #{id}
    </delete>
    <insert id="insert" parameterType="com.ksit.erp.entity.EmployeeRole">
    insert into employee_role (id, employee_id, role_id
      )
    values (#{id,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ksit.erp.entity.EmployeeRole">
    insert into employee_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ksit.erp.entity.EmployeeRole">
    update employee_role
    <set>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ksit.erp.entity.EmployeeRole">
    update employee_role
    set employee_id = #{employeeId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>